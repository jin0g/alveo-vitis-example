---
description: 
globs: 
alwaysApply: true
---
# make clean コマンドの取り扱いに関するガイドライン

## 指摘事項
ユーザーより、「不用意にmake cleanをしてはならない、コンパイル済みのバイナリが消えてしまうから」との指摘を受けました。

## ルール
1.  **`make clean` の実行前確認**:
    `make clean` コマンドを実行する前には、必ず対象プロジェクトの `Makefile` 内に定義されている `clean` ターゲットの内容を精査すること。
    特に、コンパイルに長時間を要する可能性のあるファイル（例: `.xclbin`, `.o`, 実行可能バイナリなど）が削除対象に含まれていないかを確認する。

2.  **影響範囲の最小化**:
    もし特定のファイルのみを削除したい場合は、`make clean` のような広範囲に影響するコマンドではなく、より限定的なコマンド（例: `rm specific_file.o`）や、特定の種類のファイルのみを削除するような `Makefile` ターゲット（例: `make clean_objects`）が用意されていればそれを使用することを検討する。

3.  **ユーザーへの確認**:
    `clean` ターゲットが重要なファイルを削除する可能性があると判断された場合、またはその疑いがある場合は、ユーザーに実行の可否および影響について確認を行うこと。

## 背景・理由
`make clean` はプロジェクトのビルド成果物を一括で削除するための便利なコマンドですが、その定義はプロジェクト毎に異なり、意図せず重要なファイル（特に再生成に時間がかかるもの）を削除してしまうリスクがあります。
今回の指摘は、`multi-kernel` プロジェクトにおいて、コンパイル済みの `chained_kernels.xclbin` が `make clean` によって削除されてしまった事象に基づいています。

## 今後の対応
このルールを遵守し、開発効率の低下やユーザーの作業時間を無駄にすることを避けるよう努めます。
このルールは必要に応じて更新していきます。
